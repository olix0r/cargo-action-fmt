name: release

on:
  pull_request:
    paths:
      - .github/workflows/release.yml
      - action.yml
      - Cargo.toml
  push:
    tags:
      - 'release/*'

permissions:
  contents: write

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUST_BACKTRACE: short
  RUSTUP_MAX_RETRIES: 10

jobs:
  publish:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    container: docker://ghcr.io/linkerd/dev:v36-rust-musl
    steps:
      - name: Parse tag
        id: parse-tag
        shell: bash
        run: |
          ref="${{ github.ref }}"
          if [[ "$ref" == refs/tags/release/* ]]; then
            v="${ref#refs/tags/release/}"
            echo "Release version: $v"
            echo version="$v" >> "$GITHUB_OUTPUT"
          else
            echo "Not a release version: $ref"
          fi

      # XXX dev:v36-rust container doesn't include libjq
      - run: apt update && apt install -y --no-install-recommends jq

      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
      - name: Check action version
        if: steps.parse-tag.outputs.version
        run: |
          v=$(yq .inputs.version.default action.yml)
          echo "action.yml $v"
          if [ "${v}" != '${{ steps.parse-tag.outputs.version }}' ]; then
            echo "::error ::Action version ${v} does not match tag version ${{ steps.parse-tag.outputs.version }}"
            exit 1
          fi

      - run: just-cargo fetch --locked
      - name: Check crate version
        if: steps.parse-tag.outputs.version
        run: |
          v=$(just-cargo crate-version 'cargo-action-fmt')
          echo "cargo.toml $v"
          if [ "${v}" != '${{ steps.parse-tag.outputs.version }}' ]; then
            echo "::error ::Crate version v${v} does not match tag version ${{ steps.parse-tag.outputs.version }}"
            exit 1
          fi

      - run: just-cargo profile=release target=x86_64-unknown-linux-musl build --frozen
      - run: just-cargo profile=release target=aarch64-unknown-linux-musl build --frozen
      - run: just-cargo profile=release target=armv7-unknown-linux-musleabihf build --frozen
      - name: Package
        shell: bash
        run: |
          mkdir -p target/out
          for t in {x86_64,aarch64}-unknown-linux-musl armv7-unknown-linux-musleabihf ; do
            tar czf "target/out/cargo-action-fmt-${t}.tar.gz" -C "target/$t/release" cargo-action-fmt
          done

      - if: steps.parse-tag.outputs.version == ''
        run: cargo publish --dry-run
      - if: steps.parse-tag.outputs.version
        run: cargo publish --token=${{ secrets.CRATESIO_TOKEN }}

      - uses: softprops/action-gh-release@1e07f4398721186383de40550babbdf2b84acfc5
        if: steps.parse-tag.outputs.version
        with:
          name: ${{ steps.parse-tag.outputs.version }}
          files: target/out/*
          generate_release_notes: true
