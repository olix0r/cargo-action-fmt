name: release

on:
  pull_request:
    paths:
      - .github/workflows/release.yml
      - action.yml
      - Cargo.toml
  push:
    tags:
      - 'release/*'

permissions:
  contents: write

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUST_BACKTRACE: short
  RUSTUP_MAX_RETRIES: 10

jobs:
  publish:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    container:
      image: docker://rust:1.60-bullseye
    steps:
      - name: parse tag
        id: parse-tag
        shell: bash
        run: |
          ref="${{ github.ref }}"
          if [[ "$ref" == refs/tags/release/* ]]; then
            v="${ref#refs/tags/release/}"
            echo "Release version: $v"
            echo "::set-output name=version::$v"
          else
            echo "Not a release version: $ref"
          fi

      - name: Install jq
        run: apt update && apt install -y jq
      - name: Install yq
        run: |
          curl --proto '=https' --tlsv1.3 -fsSLo /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/v4.25.1/yq_linux_amd64
          chmod 755 /usr/local/bin/yq

      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8

      - name: check action version
        if: steps.parse-tag.outputs.version
        run: |
          v=$(yq .inputs.version.default action.yml)
          echo "action.yml $v"
          if [ "${v}" != "${{ steps.parse-tag.outputs.version }}" ]; then
            echo "::error ::Action version ${v} does not match tag version ${{ steps.parse-tag.outputs.version }}"
            exit 1
          fi

      - run: cargo fetch --locked

      - name: check crate version
        if: steps.parse-tag.outputs.version
        run: |
          v=$(cargo metadata --frozen --format-version=1  | jq -r '.packages[] | select(.name == "cargo-action-fmt") | .version')
          echo "cargo.toml v$v"
          if [ "v${v}" != "${{ steps.parse-tag.outputs.version }}" ]; then
            echo "::error ::Crate version v${v} does not match tag version ${{ steps.parse-tag.outputs.version }}"
            exit 1
          fi

      - name: cargo build
        run: |
          cargo build --release --frozen
          mv target/release/cargo-action-fmt target/cargo-action-fmt-x86_64-unknown-linux-gnu

      - run: cargo publish --dry-run

      - uses: softprops/action-gh-release@1e07f4398721186383de40550babbdf2b84acfc5
        if: steps.parse-tag.outputs.version
        with:
          name: ${{ steps.parse-tag.outputs.version }}
          files: target/cargo-action-fmt-x86_64-unknown-linux-gnu
          generate_release_notes: true

      - if: steps.parse-tag.outputs.version
        run: cargo publish --token=${{ secrets.CRATESIO_TOKEN }}
